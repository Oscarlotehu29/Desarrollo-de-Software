:root {
    --blanco: #ffffff;
    --negro: black;
    --primario: #00BFFF;
}

html {
    font-size: 62.5%;
    box-sizing: border-box;/*Esto*/
}

*, *:before, *:after{
    box-sizing: inherit; /*-- y esto sirven para poder respetar el tamaño de los elementos si aplicamos un padding por ejemplo*/
}

body {
    font-size: 16px;
    font-family:'Gill Sans MT';
}

h1  {
    font-size: 3.8rem;/*1 rem es igual a 10px*/
}

h2  {
    font-size: 2.8rem;
}

h3  {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}

.titulo_marca span {
    font-size: 1.6rem;
    font-family: 'Poiret One', cursive;
    color: var(--primario);
}

.contenedor{/*Va a centrar todo el contenido de mi pagina web*/
    max-width: 120rem;/*Esto se cambio de width a "max-width" para indicar que esto lo tome como maximo y solo cuando este espacio este disponible*/
    margin: 0 auto;
}

.boton  {
    background-color: var(--negro);/*color de fondo del boton*/
    color: var(--blanco);/*Color de texto*/
    padding: 1rem 3rem;
    margin-top: 3.5rem;/*Para colocar separacion entre el elemento de arriba (el icono y el texto) y el boton*/
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;/*Tranforma el texto a mayusculas, Se recomienda colocar aquí los cambios a mayuscula o minuscaula para el texto ya que permite hacer un solo cambio en todo el documento html a diferencia de que si en el html lo quisieramos en dicho documento seria un cambio por texto*/
    font-weight: bold; /*Hacemos el texto más en negrita*/
    border-radius: .5rem; /*Le da el estilo redondeado al boton*/
    width: 90%; /*Aumentamos el tamaño del boton para el diseño responsivo*/
    text-align: center; /*Alineamos el texto del boton*/
}

@media (min-width: 768px) { /*Llegado a este numero de pixeles el tamaño del boton se resetea es decir vuelve a su tamaño normal*/
    .boton  {
        width: auto;
    }
}

.nav-baground{
    /*La siguiente linea crea el fondo de la navegación principal*/
    background-color: var(--negro); /*Se coloca aqui porque al usar la clase contenedor este limita a que el contenedor lo limita*/
}

.navegacion-principal{
    
    display: flex;/*Esta propiedad ayuda a centrar los elementos a de html y para ellos se tiene que habilitar flexbox y esto se logra colocando esto en elemento padre de lo que 
    que queremos centrar, en este caso como se quiere centrar los "a", se debe colocar en la clase de nav
    Sirve para alinear elementos en los diseños.
    
    Direcciones: 
    podemos distribuir elementos en las dos direciones, en horizontal(fila, es decir, de izquierda a derecha), y vertical (column) de arriba hacia abajo.

    Si usamos display: flex; o display-direction:row; -- es lo mismo, los elementos hijos se ponen uno frente a otro es como un display inline se coloca uno a la derecha de otro
    y viene consigo la propiedad de "justify-content".

    display-direction: column lo vuelve como si fuera un display block se colocan los elementos de arriba hacia abajo
    las propiedades para alinear este contenido en este eje, tenemos que usar la propiedad de align-items.
    */
    flex-direction: column;
    /*align-items: center;*/
    /*justify-content: space-between;ayuda mover el contenido horizontalmente, y con space-between el contenido se distribuye*/
    
    /*Si querremos distribuir el contenido:display:
        podemos usar las propiedades que comienzan con "space"
        space-between: Le dice al primer y ultimo contenido que se vayan a las esquinas y a partir de ello distribuye el espacio entre cada elemento
        space-around: Distribuye los elementos, entre cada elemento es el mismo espacio de separación
    */
}

.navegacion-principal a {
    padding: 1rem;/*Lo interpreta como un pading en las cuatro direcciones al igual que el margin*/
    color: var(--blanco);
    text-decoration: none;/*Quitamos el subrayado del texto*/
    font-size: 1.8rem;
    font-weight: 700;/*Coloca texto en negritas porque los textos, enlaces y parrafos tienen de tamaño por defecto de 400px o normal, 700px es lo mismo que bold*/
    display: block;
    text-align: center;
}

.navegacion-principal a:hover {/*Es un evento de css y son conocidos como pseudoclases, es decir, clases que se crean en el momento hover es el efecto que se dispara al poner el cursor sobre el enlace*/
    background-color: var(--primario);
}

/*Media Queris
mobiles: 0 - 480px
Tablets: 768px -- para las tablets
*/

@media (min-width: 768px) {
    .navegacion-principal{/*Lo que tenga en el contenido principal se hereda a los mediaqueries, por lo tanto no se tiene que volver a activar el display "flex"*/
        flex-direction: row;/*Lo que hacemos es que llegado al tamaño de una tablet (768px) en adelante regresamos la direccion del display flex al eje de izquierda a derecha*/
        justify-content: space-between;
    }
}/*llegado el numero especificado hacia arriba, se aplicara todo lo que este dentro
-Todo lo que se encuentre afuera de los mediaquerie se va a aplicar a partir de cero
*/

.hero{
    background-image: url(../img/m55.jpg);
    background-repeat: no-repeat;/*Para que la imagen que esta de fondo no se repita*/
    background-size: cover;
    height: 450px;
    position: relative;/**/
}

.contenido-hero{
    position: absolute;/*Cuando se quiere posicionar el contenido en un lugar exacto se usa posicion absoluta y relativa
    y para que la clase hija se pueda mover, se tiene que definir como posicion absoluta, y la clase padre
    se coloca como posicion relative, en este caso la clase padre es la clase ".hero".
    */

    /*
    width: 2rem;
    height: 2rem;
    background-color: red;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    */

    /* Coordenadas:
    posicion "top" --- es la parte de arriba
    bottom: abajo
    */

    background-color: rgb(0, 0, 0, .5);/*Esta linea aplica la transparencia a la imagen, el cuarto valor es el que modifica la intensidad de la transparencia con valores de 0 a 1 o con porcentajes*/
    background-color: rgb(0 0 0 / 60%);
    width: 100%;
    height: 100%;/*Es para que ocupe todo el espacio disponible desde donde la clase "hero" se lo permita*/

    display: flex;/*Cuando requiero alinear horizontal y verticalmente se usan las lineas que se pasan de flex-direction de row a column*/
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2, p {
    color: var(--blanco);
}

.ubicacion  {
    display: flex;
    align-items: end;/*Alinea verticalmente hacia abajo el texto de la clase*/
}